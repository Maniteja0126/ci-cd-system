name: Modular CI/CD

on:
  workflow_call:
    inputs:
      config-path:
        required: true
        type: string
      environment:
        required: true
        type: string
    secrets:
      REDIS_URL:
        required: false
      DATABASE_URL:
        required: false
      NODE_ENV:
        required: false
      AWS_ACCESS_KEY_ID:
        required: false
      AWS_SECRET_ACCESS_KEY:
        required: false
      AWS_REGION:
        required: false
      EC2_HOST:
        required: false
      EC2_USER:
        required: false
      EC2_PRIVATE_KEY:
        required: false

jobs:
  run-pipeline:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout calling project
        uses: actions/checkout@v4
        with:
          path: project

      - name: Checkout CI/CD system
        uses: actions/checkout@v4
        with:
          repository: Maniteja0126/ci-cd-system
          path: cicd-system

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: |
            project/package-lock.json
            cicd-system/package-lock.json

      - name: Install project dependencies
        run: npm install
        working-directory: project

      - name: Install CI/CD system dependencies
        run: npm install
        working-directory: cicd-system

      - name: Build project
        run: npm run build
        working-directory: project

      - name: Create SSH key file (if EC2 deployment)
        if: ${{ secrets.EC2_PRIVATE_KEY != '' }}
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_PRIVATE_KEY }}" > ~/.ssh/deploy-key.pem
          chmod 600 ~/.ssh/deploy-key.pem

      - name: Run Modular CI/CD Pipeline
        run: |
          echo "Running CI/CD with config: ${{ inputs.config-path }} and env: ${{ inputs.environment }}"
          env | sort
          npx ts-node src/cli.ts ../project/${{ inputs.config-path }} ${{ inputs.environment }}
        working-directory: cicd-system
        env:
          CONFIG_PATH: ${{ inputs.config-path }}
          DEPLOY_ENV: ${{ inputs.environment }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          NODE_ENV: ${{ secrets.NODE_ENV }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USER: ${{ secrets.EC2_USER }}
          EC2_KEY: /home/runner/.ssh/deploy-key.pem
